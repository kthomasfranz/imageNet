read.csv(airports)
read.csv("airports.csv")
airports<-read.csv("airports.csv")
Southwest<-read.csv("Southwest.csv")
# Function ----------------------------------------------------------------
netvis<-function(data, nodes=NULL, layout = "lgl", label, directed=F, node_color,
node_size, edge_color, edge_size){
title<-paste0("Network Graph of ", deparse(substitute(data)))
title<-paste0(title, " data")
if(is.data.frame(data)){
data = tbl_graph(edges=data, nodes=nodes, directed = directed)
}
if(is.igraph(data)){
data = as_tbl_graph(data, directed = directed)
}
df<-data%>%
activate(edges)
df<-as_tibble(df)%>%
group_by(from, to)%>%
summarise(edge_weight=n())%>%
ungroup()
data<-data%>%
activate(edges) %>%
left_join(df, by = c("from", "to"))
data<-data%>%
activate(nodes)%>%
mutate(betweenness = centrality_betweenness(directed=directed)) %>%
mutate(closeness = centrality_closeness())%>%
mutate(degree=centrality_degree())%>%
mutate(eigen=centrality_eigen(directed=directed))
##Node Customization
node_c<-enquo(node_color)
node_s<-enquo(node_size)
if (missing(node_color) & missing(node_size)){
point <- function() geom_node_point(color="cornflowerblue", size=8)
}
else if (missing(node_color) & !missing(node_size)){
if (is.numeric(substitute(node_size))){
point <- function() geom_node_point(size=node_size, color="cornflowerblue")
}else{
point <- function() geom_node_point(aes(size=!!node_s), color="cornflowerblue")
}
else if (!missing(node_color) & missing(node_size)){
if (is.character(substitute(node_color))){
point <- function() geom_node_point(color=node_color, size=8)
}else{
point <- function() geom_node_point(aes(color=!!node_c), size=8)
}
else if (is.character(substitute(node_color)) & is.numeric(substitute(node_size))){
point <- function() geom_node_point(size=node_size, color=node_color)}
else if (is.character(substitute(node_color)) & !is.numeric(substitute(node_size))){
point <- function() geom_node_point(aes(size=!!node_s), color=node_color)}
else if (!is.character(substitute(node_color)) & is.numeric(substitute(node_size))){
point <- function() geom_node_point(aes(color=!!node_c), size=node_size)
}
else{
point <- function() geom_node_point(aes(color=!!node_c, size=!!node_s))
}
##Edge Customization
edge_c<-enquo(edge_color)
edge_s<-enquo(edge_size)
if (directed==T){
edge_arrow=arrow(angle = 15, type="closed", length = unit(0.4, "cm"))
}else{
edge_arrow=NULL
}
if (missing(edge_color) & missing(edge_size)){
link <- function() geom_edge_link(edge_color="slategrey", edge_width=0.6, arrow=edge_arrow)
}
else if (missing(edge_color) & !missing(edge_size)){
if (is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(edge_width=edge_size, edge_color="slategrey", arrow=edge_arrow)
}else{
link <- function() geom_edge_link(aes(edge_width=!!edge_s), edge_color="slategrey", arrow=edge_arrow)
}
else if (!missing(edge_color) & missing(edge_size)){
if (is.character(substitute(edge_color))){
link <- function() geom_edge_link(edge_color=edge_color, edge_width=0.6, arrow=edge_arrow)
}else{
link <- function() geom_edge_link(aes(edge_color=!!edge_c), edge_width=0.6, arrow=edge_arrow)
}
else if (is.character(substitute(edge_color)) & is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(edge_width=edge_size, edge_color=edge_color, arrow=edge_arrow)}
else if (is.character(substitute(edge_color)) & !is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(aes(edge_width=!!edge_s), edge_color=edge_color, arrow=edge_arrow)}
else if (!is.character(substitute(edge_color)) & is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(aes(edge_color=!!edge_c), edge_width=edge_size, arrow=edge_arrow)
}
else{
link <- function() geom_edge_link(aes(edge_color=!!edge_c, edge_width=!!edge_s), arrow=edge_arrow)
}
##label
if (missing(label)){
print(vertex_attr_names(data)[1])
text <- function() geom_node_text(aes(label=get(vertex_attr_names(data)[1])),
colour = 'navy', vjust = 0.4)
}
else{
label=enquo(label)
text <- function() geom_node_text(aes(label=!!label),
colour = 'navy', vjust = 0.4)
}
##graph
g<-data %>%
ggraph(layout = layout)+
link() +
point() +
text()+
ggtitle(title)+
theme_graph()
all_data<-list("data"=data,"network"=g)
return(all_data)
}
# Examples ----------------------------------------------------------------
library(igraphdata)
data("karate")
netvis(karate, label=name, layout="nicely")
library(igraph)
netvis(karate, label=name, layout="nicely")
library(tidygraph)
library(ggplot2)
library(dplyr)
library(tidygraph)
library(igraph)
library(ggraph)
library(ggthemes)
netvis(karate, label=name, layout="nicely")
library(ggplot2)
library(dplyr)
library(tidygraph)
library(ggraph)
library(ggthemes)
imageNet<-function(data, nodes=NULL, layout = "lgl", label, directed=F, node_color,
node_size, edge_color, edge_size){
title<-paste0("Network Graph of ", deparse(substitute(data)))
title<-paste0(title, " data")
if(is.data.frame(data)){
data = tbl_graph(edges=data, nodes=nodes, directed = directed)
}
if(is.igraph(data)){
data = as_tbl_graph(data, directed = directed)
}
df<-data%>%
activate(edges)
df<-as_tibble(df)%>%
group_by(from, to)%>%
summarise(edge_weight=n())%>%
ungroup()
data<-data%>%
activate(edges) %>%
left_join(df, by = c("from", "to"))
data<-data%>%
activate(nodes)%>%
mutate(betweenness = centrality_betweenness(directed=directed)) %>%
mutate(closeness = centrality_closeness())%>%
mutate(degree=centrality_degree())%>%
mutate(eigen=centrality_eigen(directed=directed))
##Node Customization
node_c<-enquo(node_color)
node_s<-enquo(node_size)
if (missing(node_color) & missing(node_size)){
point <- function() geom_node_point(color="cornflowerblue", size=8)
}
else if (missing(node_color) & !missing(node_size)){
if (is.numeric(substitute(node_size))){
point <- function() geom_node_point(size=node_size, color="cornflowerblue")
}else{
point <- function() geom_node_point(aes(size=!!node_s), color="cornflowerblue")
}
else if (!missing(node_color) & missing(node_size)){
if (is.character(substitute(node_color))){
point <- function() geom_node_point(color=node_color, size=8)
}else{
point <- function() geom_node_point(aes(color=!!node_c), size=8)
}
else if (is.character(substitute(node_color)) & is.numeric(substitute(node_size))){
point <- function() geom_node_point(size=node_size, color=node_color)}
else if (is.character(substitute(node_color)) & !is.numeric(substitute(node_size))){
point <- function() geom_node_point(aes(size=!!node_s), color=node_color)}
else if (!is.character(substitute(node_color)) & is.numeric(substitute(node_size))){
point <- function() geom_node_point(aes(color=!!node_c), size=node_size)
}
else{
point <- function() geom_node_point(aes(color=!!node_c, size=!!node_s))
}
##Edge Customization
edge_c<-enquo(edge_color)
edge_s<-enquo(edge_size)
if (directed==T){
edge_arrow=arrow(angle = 15, type="closed", length = unit(0.4, "cm"))
}else{
edge_arrow=NULL
}
if (missing(edge_color) & missing(edge_size)){
link <- function() geom_edge_link(edge_color="slategrey", edge_width=0.6, arrow=edge_arrow)
}
else if (missing(edge_color) & !missing(edge_size)){
if (is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(edge_width=edge_size, edge_color="slategrey", arrow=edge_arrow)
}else{
link <- function() geom_edge_link(aes(edge_width=!!edge_s), edge_color="slategrey", arrow=edge_arrow)
}
else if (!missing(edge_color) & missing(edge_size)){
if (is.character(substitute(edge_color))){
link <- function() geom_edge_link(edge_color=edge_color, edge_width=0.6, arrow=edge_arrow)
}else{
link <- function() geom_edge_link(aes(edge_color=!!edge_c), edge_width=0.6, arrow=edge_arrow)
}
else if (is.character(substitute(edge_color)) & is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(edge_width=edge_size, edge_color=edge_color, arrow=edge_arrow)}
else if (is.character(substitute(edge_color)) & !is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(aes(edge_width=!!edge_s), edge_color=edge_color, arrow=edge_arrow)}
else if (!is.character(substitute(edge_color)) & is.numeric(substitute(edge_size))){
link <- function() geom_edge_link(aes(edge_color=!!edge_c), edge_width=edge_size, arrow=edge_arrow)
}
else{
link <- function() geom_edge_link(aes(edge_color=!!edge_c, edge_width=!!edge_s), arrow=edge_arrow)
}
##label
if (missing(label)){
print(vertex_attr_names(data)[1])
text <- function() geom_node_text(aes(label=get(vertex_attr_names(data)[1])),
colour = 'navy', vjust = 0.4)
}
else{
label=enquo(label)
text <- function() geom_node_text(aes(label=!!label),
colour = 'navy', vjust = 0.4)
}
##graph
g<-data %>%
ggraph(layout = layout)+
link() +
point() +
text()+
ggtitle(title)+
theme_graph()
all_data<-list("data"=data,"network"=g)
return(all_data)
}
usethis::use_data(karate)
karate
load("~/Documents/R/QAC 356/imageNet/data/karate.rda")
library(usethis)
library(roxygen2)
library(sinew)
library(pkgdown)
library(devtools)
karate
load("~/Documents/R/QAC 356/imageNet/data/karate.rda")
karate<-load("~/Documents/R/QAC 356/imageNet/data/karate.rda")
igraphdata::karate
igraphdata::"karate"
igraphdata::karate
igraphdata::enron
karate<-karate
data(karate, package="igraphdata")
karate
save(airports, file = "airports.rda")
save(Southwest, file = "Southwest.rda")
load("~/Documents/R/QAC 356/imageNet/Southwest.rda")
load("~/Documents/R/QAC 356/imageNet/airports.rda")
usethis::use_data(airports)
usethis::use_data(Southwest)
View(airports)
?ggraph
data("karate")
usethis::use_data(karate)
?igraph::karate
??karate
?karate
?enron
usethis::use_mit_license(name="Kaitlyn Thomas-Franz")
usthis::use_package_doc()
usethis::use_package_doc()
usethis::use_package("dplyr")
usethis::use_package("tidygraph")
usethis::use_package("igraph")
usethis::use_package("ggraph")
usethis::use_package("ggthemes")
usethis::use_package("ggplot2")
usethis::use_package("readr")
usethis::use_package("igraphdata")
usethis::use_package("leaflet")
?tidygraph
usethis::use_vignette("intro")
library(imageNet)
library(knitr)
usethis::use_readme_md()
git init
